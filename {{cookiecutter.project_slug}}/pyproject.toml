[project]
name = "{{ cookiecutter.project_slug }}"
version = "{{ cookiecutter.version }}"
description = "{{ cookiecutter.description }}"
readme = "README.md"
requires-python = ">={{ cookiecutter.python_version }}"
dependencies = [
  "django>=5.1.7",
  "django-environ>=0.12.0",
  "django-model-utils>=5.0.0",
  "djangorestframework>=3.15.0",
  "drf-spectacular>=0.27.1",
  "loguru>=0.7.3",
]

[dependency-groups]
dev = [
  "coverage>=7.7.1",
  "django-coverage-plugin>=3.1.0",
  "django-debug-toolbar>=4.3.0",
  "django-silk>=5.1.0",
  "pytest>=8.3.5",
  "pytest-cov>=6.0.0",
  "pytest-django>=4.10.0",
  "pytest-env>=1.1.5",
  "pytest-sugar>=1.0.0",
  "pytest-xdist>=3.6.1",
  "ruff>=0.11.2"
]

# ==== coverage ====
[tool.coverage]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "def __str__",
  "raise NotImplementedError",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:"
]

[tool.coverage.run]
omit = [
  "*/migrations/*",
  "*/protos/*",
  "*/tests/*",
  "*/admin.py",
  "*/apps.py"
]
source = ["core"]

[tool.django-stubs]
django_settings_module = "config.settings.test"

# ==== djLint ====
[tool.djlint]
blank_line_after_tag = "load,extends"
close_void_tags = true
format_css = true
format_js = true
# TODO: remove T002 when fixed https://github.com/djlint/djLint/issues/687
ignore = "H006,H030,H031,T002"
include = "H017,H035"
indent = 2
max_line_length = 119
profile = "django"

[tool.djlint.css]
indent_size = 2

[tool.djlint.js]
indent_size = 2

# ==== mypy ====
[tool.mypy]
check_untyped_defs = true
ignore_missing_imports = true
plugins = [
  "mypy_django_plugin.main",
  "mypy_drf_plugin.main"
]
python_version = "{{ cookiecutter.python_version }}"
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
ignore_errors = true
# Django migrations should not produce any errors:
module = "*.migrations.*"

# ==== pytest ====
[tool.pytest]

[tool.pytest.ini_options]
addopts = """
    --no-migrations
    -v
    -n auto
    --reuse-db
    -x
    --tb=short
"""
env = [
  "DJANGO_READ_DOT_ENV_FILE=false",
  "DJANGO_SETTINGS_MODULE=config.settings.test"
]
python_files = ["test_*.py", "*_test.py", "tests.py"]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
extend-exclude = [
  "*/migrations/*.py",
  "staticfiles/*"
]
line-length = 119
target-version = "py{{ cookiecutter.python_version }}"

# ==== ruff ====
[tool.ruff.lint]
exclude = ["manage.py"]
# The fixes in extend-unsafe-fixes will require
# provide the `--unsafe-fixes` flag when fixing.
extend-unsafe-fixes = [
  "UP038"
]
ignore = [
  "S101", # Use of assert detected https://docs.astral.sh/ruff/rules/assert/
  "RUF012", # Mutable class attributes should be annotated with `typing.ClassVar`
  "SIM102", # sometimes it's better to nest
  "UP038", # Checks for uses of isinstance/issubclass that take a tuple
  "COM812", # Missing trailing comma in Python 3.6+ collection literals
  "ISC001" # Implicitly concatenated string literals on one line
]
select = [
  "F",
  "E",
  "W",
  "C90",
  "I",
  "N",
  "UP",
  "YTT",
  # "ANN", # flake8-annotations: we should support this in the future but 100+ errors atm
  "ASYNC",
  "S",
  "BLE",
  "FBT",
  "B",
  "A",
  "COM",
  "C4",
  "DTZ",
  "T10",
  "DJ",
  "EM",
  "EXE",
  "FA",
  'ISC',
  "ICN",
  "G",
  'INP',
  'PIE',
  "T20",
  'PYI',
  'PT',
  "Q",
  "RSE",
  "RET",
  "SLF",
  "SLOT",
  "SIM",
  "TID",
  "TCH",
  "INT",
  # "ARG", # Unused function argument
  "PTH",
  "ERA",
  "PD",
  "PGH",
  "PL",
  "TRY",
  "FLY",
  # "NPY",
  # "AIR",
  "PERF",
  # "FURB",
  # "LOG",
  "RUF"
]

[tool.ruff.lint.isort]
force-single-line = true

# ==== tomlsort ====
[tool.tomlsort]
all = false
in_place = true
no_sort_tables = false
sort_table_keys = true
sort_first = [
  "project",
  "dependency"
]

[tool.tomlsort.overrides."project"]
first = [
  "name",
  "version",
  "description",
  "readme",
  "requires-python",
  "dependencies"
]

[tool.tomlsort.overrides."tool.tomlsort"]
table_keys = false
